name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 14 */15 * *'

permissions:
  actions: read
  contents: read
  statuses: write

jobs:
  Linux:
    name: Linux
    runs-on: ubuntu-latest

    env:
      SRC_DIR: src/github.com/${{ github.repository }}
      EK_TEST_PORT: 8080

    strategy:
      matrix:
        go: [ '1.17.x', '1.18.x' ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Setup PATH
        run: |
          echo "GOPATH=${{ github.workspace }}" >> "$GITHUB_ENV"
          echo "GOBIN=${{ github.workspace }}/bin" >> "$GITHUB_ENV"
          echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{env.SRC_DIR}}

      - uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-

      - name: Download dependencies
        working-directory: ${{env.SRC_DIR}}
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: make deps

      - name: Run tests
        working-directory: ${{env.SRC_DIR}}
        run: .scripts/nix.sh 12

      - name: Send coverage data
        uses: essentialkaos/goveralls-action@v1
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ${{env.SRC_DIR}}
          profile: coverage.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Install codeclimate-test-reporter
        run: npm install -g codeclimate-test-reporter

      - name: Send coverage to Codebeat
        working-directory: ${{env.SRC_DIR}}
        env:
          CODECLIMATE_API_HOST: https://codebeat.co/webhooks/code_coverage
          CODECLIMATE_REPO_TOKEN: ${{ secrets.CODECLIMATE_TOKEN }}
        run: |
          sed -i'.original' 's#/v[0-9]\+/#/#g' coverage.txt
          codeclimate-test-reporter < coverage.txt

  macOS:
    name: macOS
    runs-on: macos-latest

    needs: Linux

    env:
      SRC_DIR: src/github.com/${{ github.repository }}
      EK_TEST_PORT: 8080

    strategy:
      matrix:
        go: [ '1.17.x', '1.18.x' ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Setup PATH
        run: |
          echo "GOPATH=${{ github.workspace }}" >> "$GITHUB_ENV"
          echo "GOBIN=${{ github.workspace }}/bin" >> "$GITHUB_ENV"
          echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{env.SRC_DIR}}

      - uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-

      - name: Download dependencies
        working-directory: ${{env.SRC_DIR}}
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: make deps

      - name: Run tests
        working-directory: ${{env.SRC_DIR}}
        run: .scripts/nix.sh 12

      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get -v github.com/mattn/goveralls

      - name: Send coverage to Coveralls
        working-directory: ${{env.SRC_DIR}}
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -service github -coverprofile coverage.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Install codeclimate-test-reporter
        run: npm install -g codeclimate-test-reporter

      - name: Send coverage to Codebeat
        working-directory: ${{env.SRC_DIR}}
        env:
          CODECLIMATE_API_HOST: https://codebeat.co/webhooks/code_coverage
          CODECLIMATE_REPO_TOKEN: ${{ secrets.CODECLIMATE_TOKEN }}
        run: |
          sed -i'.original' 's#/v[0-9]\+/#/#g' coverage.txt
          codeclimate-test-reporter < coverage.txt

  Windows:
    name: Windows (Stubs)
    runs-on: windows-latest

    env:
      SRC_DIR: src/github.com/${{ github.repository }}
      EK_TEST_PORT: 8080

    strategy:
      matrix:
        go: [ '1.17.x', '1.18.x' ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Setup PATH
        run: |
          echo "GOPATH=${{ github.workspace }}" >> "$GITHUB_ENV"
          echo "GOBIN=${{ github.workspace }}/bin" >> "$GITHUB_ENV"
          echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{env.SRC_DIR}}

      - name: Run tests on Windows
        working-directory: ${{env.SRC_DIR}}
        run: .scripts/windows.sh 12

  Lint:
    name: Lint
    runs-on: ${{ matrix.os }}

    needs: [Linux, macOS, Windows]

    env:
      SRC_DIR: src/github.com/${{ github.repository }}

    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.x'

      - name: Setup PATH
        run: |
          echo "GOPATH=${{ github.workspace }}" >> "$GITHUB_ENV"
          echo "GOBIN=${{ github.workspace }}/bin" >> "$GITHUB_ENV"
          echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{env.SRC_DIR}}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: ${{env.SRC_DIR}}
          args: --issues-exit-code=0 --timeout=3m --build-tags=unit
